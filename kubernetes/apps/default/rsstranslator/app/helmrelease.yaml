---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app rsstranslator
  namespace: default
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      rsstranslator:
        containers:
          app:
            image:
              repository: versun/rsstranslator
              tag: 2025.10.11
            env:
              PORT: &port 8000
              TZ: ${TIMEZONE}
              SITE_URL: https://rsstranslator.${SECRET_DOMAIN}
              REDIS_URL: redis://dragonfly.database.svc.cluster.local:6379/0
              CSRF_TRUSTED_ORIGINS: https://rsstranslator.${SECRET_DOMAIN}
              DEFAULT_TARGET_LANGUAGE: Chinese Simplified # See https://github.com/versun/RSS-Translator/blob/main/config/settings.py#L199 for optional values
              DEBUG: 1
              DEMO: 0
              USER_MANAGEMENT: 0
              LOG_LEVEL: ERROR
              default_max_posts: 20
            resources:
              requests:
                cpu: 10m
                memory: 100Mi
              limits:
                memory: 1024Mi
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  exec:
                    command:
                      - python
                      - -c
                      - import redis,os; r=redis.Redis.from_url(os.getenv('REDIS_URL')); r.ping()
                  periodSeconds: 5
                  timeoutSeconds: 3
                  failureThreshold: 10
              readiness: *probes
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /app/data

