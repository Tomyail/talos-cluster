---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app linkwarden
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      linkwarden:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: linkwarden-secret
        containers:
          app:
            image:
              repository: ghcr.io/linkwarden/linkwarden
              tag: v2.11.2@sha256:ecf4f27b03741971cb8d68d25b4a772418d6ddf40947bdfbb8f9cda53a1faba2
            env:
              TZ: ${TIMEZONE}
              STORAGE_FOLDER: "config"
              HOME: /data/config
              # Yarn 环境变量 - 设置可写目录
              YARN_CACHE_FOLDER: /tmp/.yarn-cache
              YARN_GLOBAL_FOLDER: /tmp/.yarn-global
              NPM_CONFIG_CACHE: /tmp/.npm
              NEXTAUTH_URL: https://linkwarden.${SECRET_DOMAIN}/api/v1/auth
              NEXT_PUBLIC_OLLAMA_ENDPOINT_URL: http://ollama.default.svc.cluster.local:11434
              OLLAMA_MODEL: "phi3:mini-4k"
              NEXT_PUBLIC_DISABLE_REGISTRATION: "true"
            envFrom: *envFrom
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2048Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 3000
    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /data/config
      next-cache:
        type: emptyDir
        globalMounts:
          - path: /data/.next/cache
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      cache:
        type: emptyDir
        globalMounts:
          - path: /data/apps/web/.next/cache
